#version 330
const int numLights = 5;
uniform mat4 perspectiveMatrix;
uniform mat4 rotationMatrix;
uniform mat4 scaleMatrix;
uniform mat3 normalMatrix;
uniform mat4 cameraMatrix;
uniform vec3 eyePos;
uniform vec3 lightPos[numLights];
uniform bool instanced;

in vec3 inCoords;
in vec3 inNormals;
in vec2 inUVs;
in vec3 inPositions;
out vec3 norm;
out vec3 eyeVec;
out vec3 lightVector[numLights];

void main(){
        vec4 position     =  vec4(inCoords,1.0);
       if(instanced == true){
                position          = rotationMatrix * scaleMatrix * position;
                position          += vec4(inPositions,1.0);
        }
        norm              = normalize(normalMatrix * inNormals);
        eyeVec            = normalize(eyePos-position.xyz);
        for(int light = 0; light < numLights; light++){
          lightVector[light]       = lightPos[light] - position.xyz;
        }
	gl_Position       = perspectiveMatrix * cameraMatrix * position;
}