#version 330
const int numLights = 1;
uniform mat4 perspectiveMatrix;
uniform mat4 worldMatrix;
uniform mat3 normalMatrix;
uniform mat4 cameraMatrix;
uniform vec3 eyePos;
uniform vec3 lightPos[numLights];
uniform bool instanced;

in vec3 inCoords;
in vec3 inNormals;
in vec2 inUVs;
in vec3 inPositions;
out vec3 norm;
out vec3 eyeVec;
out vec3 lightVector[numLights];

void main(){
       vec4 position   = worldMatrix *  vec4(inCoords,1.0);

	   mat4 m = mat4(1.0,0.0,0.0,0.0,
				     0.0,1.0,0.0,0.0,
					 0.0,0.0,1.0,0.0,
				     inPositions.x,inPositions.y,inPositions.z,1.0);

        position = m * position;
        
        norm              = normalMatrix * inNormals;
        eyeVec            = eyePos-position.xyz;

        for(int light = 0; light < numLights; light++){
          lightVector[light]       = lightPos[light] - position.xyz;
        }

	    gl_Position       = perspectiveMatrix * cameraMatrix * position;
}