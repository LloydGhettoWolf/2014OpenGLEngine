//directional Lighting
#version 400

uniform mat4 perspectiveMatrix;
uniform mat4 scaleMatrix;
uniform mat4 cameraMatrix;
uniform vec3 eyePos;

uniform mat4 depthPerspectiveMatrix;

in vec3 inCoords;
in vec3 inNormals;
in vec3 inTangents;
in vec3 inBitangents;
in vec2 inUVs;

out vec3 normal;
out vec3 tangent;
out vec3 bitangent;
out vec3 eyeVec;
out vec2 UVs;
out vec4 shadowPosition;

void main(){

    vec4 position    = vec4(inCoords,1.0);

    normal           = inNormals;
	tangent			 = normalize(inTangents);
	bitangent        = normalize(inBitangents);

	position         =  scaleMatrix * position;
    eyeVec           = normalize(eyePos-position.xyz);
    UVs              = inUVs;

	shadowPosition   =  depthPerspectiveMatrix *  position;

	gl_Position      =  perspectiveMatrix * cameraMatrix * position;
}